{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/contatos/contatos.component.ts","./src/app/components/contatos/contatos.component.html","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.ts","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.html","./src/app/components/eventos/evento-lista/evento-lista.component.ts","./src/app/components/eventos/evento-lista/evento-lista.component.html","./src/app/components/eventos/eventos.component.ts","./src/app/components/eventos/eventos.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.ts","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.html","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.ts","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.html","./src/app/components/palestrantes/palestrantes.component.ts","./src/app/components/palestrantes/palestrantes.component.html","./src/app/components/redesSociais/redesSociais.component.ts","./src/app/components/redesSociais/redesSociais.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/components/user/perfil/perfil-detalhe/perfil-detalhe.component.ts","./src/app/components/user/perfil/perfil-detalhe/perfil-detalhe.component.html","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/guard/auth.guard.ts","./src/app/helpers/DateTimeFormat.pipe.ts","./src/app/helpers/ValidatorField.ts","./src/app/interceptors/jwt.interceptor.ts","./src/app/models/Pagination.ts","./src/app/services/evento.service.ts","./src/app/services/lote.service.ts","./src/app/services/palestrante.service.ts","./src/app/services/redeSocial.service.ts","./src/app/services/user.service.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/app/shared/titulo/titulo.component.ts","./src/app/shared/titulo/titulo.component.html","./src/app/util/constants.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ContatosComponent } from './components/contatos/contatos.component';\r\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\r\n\r\nimport { EventosComponent } from './components/eventos/eventos.component';\r\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\r\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\r\n\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { RegistrationComponent } from './components/user/registration/registration.component';\r\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '' , redirectTo: 'eventos', pathMatch: 'full'},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'user', redirectTo: 'user/perfil'\r\n      },\r\n      {\r\n        path: 'user/perfil' , component: PerfilComponent\r\n      },\r\n\r\n      { path: 'eventos', redirectTo: 'eventos/lista'},\r\n\r\n      {\r\n        path: 'eventos' , component: EventosComponent,\r\n        children:\r\n        [\r\n          { path: 'detalhe/:id' , component: EventoDetalheComponent },\r\n          { path: 'detalhe' , component: EventoDetalheComponent },\r\n          { path: 'lista' , component: EventoListaComponent }\r\n        ]\r\n      },\r\n      { path: 'palestrantes' , component: PalestrantesComponent},\r\n      { path: 'contatos' , component: ContatosComponent},\r\n    ]\r\n  },\r\n  {\r\n    path: 'user', component: UserComponent,\r\n    children:\r\n    [\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'registration', component: RegistrationComponent}\r\n    ]\r\n  },\r\n  { path: 'home' , component: HomeComponent},\r\n  { path: '**' , redirectTo: 'eventos', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { User } from './models/Identity/User';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor(public userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    let user: User;\r\n\r\n    if (localStorage.getItem('user'))\r\n      user = JSON.parse(localStorage.getItem('user') ?? '{}')\r\n    else\r\n      user = null\r\n\r\n    if (user)\r\n    this.userService.setCurrentUser(user);\r\n  }\r\n}\r\n","<app-nav></app-nav>\r\n\r\n<div class=\"div container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDropdownModule  } from 'ngx-bootstrap/dropdown';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\n\r\nimport { EventoService } from './services/evento.service';\r\nimport { LoteService } from './services/lote.service';\r\nimport { UserService } from './services/user.service';\r\n\r\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\r\n\r\nimport { DateTimeFormatPipe } from './helpers/DateTimeFormat.pipe';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './shared/nav/nav.component';\r\nimport { EventosComponent } from './components/eventos/eventos.component';\r\nimport { ContatosComponent } from './components/contatos/contatos.component';\r\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\r\nimport { PerfilDetalheComponent } from './components/user/perfil/perfil-detalhe/perfil-detalhe.component';\r\nimport { TituloComponent } from './shared/titulo/titulo.component';\r\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\r\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { RegistrationComponent } from './components/user/registration/registration.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\r\nimport { PalestranteListaComponent } from './components/palestrantes/palestrante-lista/palestrante-lista.component';\r\nimport { PalestranteDetalheComponent } from './components/palestrantes/palestrante-detalhe/palestrante-detalhe.component';\r\nimport { RedesSociaisComponent } from './components/redesSociais/redesSociais.component';\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    EventosComponent,\r\n    ContatosComponent,\r\n    PerfilComponent,\r\n    PerfilDetalheComponent,\r\n    PalestrantesComponent,\r\n    PalestranteListaComponent,\r\n    PalestranteDetalheComponent,\r\n    RedesSociaisComponent,\r\n    TituloComponent,\r\n    DateTimeFormatPipe,\r\n    EventoDetalheComponent,\r\n    EventoListaComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    CollapseModule.forRoot(),\r\n    BsDropdownModule,\r\n    TooltipModule,\r\n    ModalModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    NgxCurrencyModule,\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot()\r\n  ],\r\n  providers: [\r\n    EventoService,\r\n    LoteService,\r\n    UserService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.scss']\n})\nexport class ContatosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo] = \"'Contatos'\" [iconClass]=\"'fas fa-envelope-open-text'\"></app-titulo>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl, Form, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { EventoService } from '@app/services/evento.service';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { DateTimeFormatPipe } from '@app/helpers/DateTimeFormat.pipe';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\n\nimport { Lote } from '@app/models/Lote';\nimport { Evento } from '@app/models/Evento';\nimport { LoteService } from '@app/services/lote.service';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-detalhe.component.html',\n  styleUrls: ['./evento-detalhe.component.scss']\n})\nexport class EventoDetalheComponent implements OnInit {\n\n  eventoId: number;\n  modalRef?: BsModalRef;\n  evento = {} as Evento;\n  form!: FormGroup;\n  estadoSalvarAtualizar: string = 'post';\n  loteAtual = {id: 0, nome: '', indice: 0};\n  imagemURL = 'assets/upload.jpg'\n  file: File;\n\n  get modoEditar(): boolean {\n    return this.estadoSalvarAtualizar === 'put';\n  }\n\n  get teste(): FormControl {\n    return this.form.get('evento') as FormControl;\n  }\n\n  get lotes(): FormArray {\n    return this.form.get('lotes') as FormArray;\n  }\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  get bsConfig(): any {\n    return {\n      isAnimated: true,\n      adaptivePosition: true,\n      dateInputFormat: 'DD/MM/YYYY hh:mm a',\n      containerClass: 'theme-blue',\n      showWeekNumbers: false,\n    };\n  }\n\n  constructor(private fb: FormBuilder,\n    private localeService: BsLocaleService,\n    private activatedRouter: ActivatedRoute,\n    private modalService: BsModalService,\n    private router: Router,\n    private eventoService: EventoService,\n    private loteService: LoteService) {\n    this.localeService.use('pt-br');\n  }\n\n  public carregarEvento(): void {\n    this.eventoId = +this.activatedRouter.snapshot.paramMap.get('id');\n\n    if (this.eventoId !== null && this.eventoId !== 0) {\n\n      this.estadoSalvarAtualizar = 'put';\n\n      this.eventoService\n      .getEventoById(this.eventoId)\n      .subscribe(\n        (evento: Evento) => {\n          this.evento = { ...evento }\n          this.form.patchValue(this.evento);\n          if (this.evento.imagemURL !== '')\n          {\n            this.imagemURL = environment.apiURL + 'resources/images/' + this.evento.imagemURL;\n          }\n          this.carregarLotes();\n        },\n        (error: any) => {\n          console.log(error)\n        },\n        () => { },\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.carregarEvento();\n    this.validation();\n  }\n\n  public validation(): void {\n    this.form = this.fb.group({\n      tema: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n      local: ['', Validators.required],\n      dataEvento: ['', Validators.required],\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\n      imagemURL: [''],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      lotes: this.fb.array([])\n    });\n  }\n\n  adicionarLote(): void {\n    this.lotes.push(this.criarLote({id: 0} as Lote));\n  }\n\n  criarLote(lote: Lote): FormGroup {\n    return this.fb.group({\n      id: [lote.id],\n      nome: [lote.nome, Validators.required],\n      preco: [lote.preco, Validators.required],\n      dataInicio: [lote.dataInicio],\n      dataFim: [lote.dataFim],\n      quantidade: [lote.quantidade, Validators.required]\n    });\n  }\n\n  public mudarValorDataLote(value: Date, indice: number, campo: string): void {\n    this.lotes.value[indice][campo] = value;\n  }\n\n  public retornaTituloLote(nome: string): string {\n    return nome === null || nome === ''\n                ? 'Nome do lote'\n                : nome;\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  openModal(event: any, template: TemplateRef<any>) {\n    event.stopPropagation();\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  openModalLote(event: any, template: TemplateRef<any>, indice: number) {\n    event.stopPropagation();\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n\n    this.loteAtual.id = this.lotes.get(indice + '.id').value;\n    this.loteAtual.nome = this.lotes.get(indice + '.nome').value;\n    this.loteAtual.indice = indice;\n  }\n\n  confirm(): void {\n    this.modalRef?.hide();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return { 'is-invalid': campoForm.errors && campoForm.touched }\n  }\n\n  public salvarEvento(): void {\n    if (this.form.valid) {\n      this.evento =\n        this.estadoSalvarAtualizar === 'post'\n          ? { ...this.form.value }\n          : { id: this.evento.id, ...this.form.value };\n\n      this.eventoService[this.estadoSalvarAtualizar](this.evento).subscribe(\n        (eventoRetorno: Evento) => {\n          this.router.navigate([`eventos/detalhe/${eventoRetorno.id}`]);\n        },\n        (error: any) => {\n          console.error(error);\n        },\n        () => {}\n      );\n    }\n  }\n\n  public salvarLotes(): void {\n    if (this.form.controls.lotes.valid) {\n      this.loteService.saveLote(this.eventoId, this.form.value.lotes)\n      .subscribe(\n        () => {\n          this.lotes.reset();\n        },\n        (error: any) => {\n          console.log(\"erro ao tentar salvar lotes.\")\n        }\n      )\n    }\n  }\n\n  public carregarLotes(): void {\n    this.loteService\n      .getLotesByEventoId(this.eventoId)\n      .subscribe(\n        (lotesRetorno: Lote[]) => {\n          lotesRetorno.forEach((lote) => {\n            this.lotes.push(this.criarLote(lote));\n          });\n        },\n        (error: any) => {\n          console.error(error);\n        }\n      )\n  }\n\n\n  public removerLote(indice: number): void {\n\n    this.lotes.removeAt(indice);\n    this.modalRef.hide();\n  }\n\n  public confirmDeleteLote(indice: number): void {\n    this.modalRef.hide();\n  }\n\n  declineDeleteLote(): void {\n    this.modalRef.hide();\n  }\n\n  onFileChange(ev: any): void {\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImage();\n  }\n\n  uploadImage(): void {\n    this.eventoService.postUpload(this.eventoId, this.file)\n      .subscribe(\n        () => this.carregarEvento(),\n        (error: any) => {console.log(\"erro ao salvar imagem\")}\n      );\n  }\n}\n","<div class=\"row\">\n  <div [ngClass]=\"{'col-md-8 pr-0': modoEditar, 'col-md-12': !modoEditar}\">\n    <div class=\"card rounded shadow-sm p-3\">\n      <form [formGroup]=\"form\">\n        <!-- <p>Form value: {{form.value | json}}</p>\n          <p>Form valid: {{form.valid | json}}</p> -->\n          <div>\n            <div class=\"d-flex\">\n              <h2 class=\"mr-auto\">\n                Evento\n              </h2>\n              <h2>\n                <i class=\"fas fa-regular fa-calendar-days\"></i>\n              </h2>\n            </div>\n            <legend class=\"d-flex justify-content-between capitalize\">\n            </legend>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-12\">\n                <label>Tema</label>\n                <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.tema)\"\n                formControlName=\"tema\"\n                placeholder=\"Insira o Tema\" [(ngModel)]=\"evento.tema\">\n                <div *ngIf=\"f.tema.errors?.required\" class=\"invalid-feedback\">\n                  tema é obrigatório\n                </div>\n                <div *ngIf=\"f.tema.errors?.minlength\" class=\"invalid-feedback\">\n                  tema deve ter no mínimo 4 caracteres\n                </div>\n                <div *ngIf=\"f.tema.errors?.maxlength\" class=\"invalid-feedback\">\n                  tema deve ter no máximo 50 caracteres\n                </div>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-8\">\n                <label>Local</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.local)\"\n                formControlName=\"local\"\n                placeholder=\"\"\n                [(ngModel)]=\"evento.local\">\n                <div *ngIf=\"f.local.errors?.required\" class=\"invalid-feedback\">\n                  local é obrigatório\n                </div>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data e Hora</label>\n                <input type=\"datetime\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.dataEvento)\"\n                value=\"{{evento.dataEvento | DateFormatPipe}}\"\n                bsDatepicker\n                [bsConfig]=\"bsConfig\"\n                formControlName=\"dataEvento\"\n                placeholder=\"\"\n                [(ngModel)]=\"evento.dataEvento\"\n                >\n                <div *ngIf=\"f.dataEvento.errors?.required\" class=\"invalid-feedback\">\n                  informe data e hora\n                </div>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-2\">\n                <label>Qtd. Pessoas</label>\n                <input type=\"number\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.qtdPessoas)\"\n                formControlName=\"qtdPessoas\"\n                placeholder=\"\"\n                [(ngModel)]=\"evento.qtdPessoas\">\n                <div *ngIf=\"f.qtdPessoas.errors?.required\" class=\"invalid-feedback\">\n                  campo obrigatório\n                </div>\n                <div *ngIf=\"f.qtdPessoas.errors?.max && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n                  valor máximo excedido: 12000\n                </div>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Telefone</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.telefone)\"\n                formControlName=\"telefone\"\n                placeholder=\"(000) 90000-0000\"\n                [(ngModel)]=\"evento.telefone\">\n                <div *ngIf=\"f.telefone.errors?.required\" class=\"invalid-feedback\">\n                  telefone é obrigatório\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label>Email</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.email)\"\n                formControlName=\"email\"\n                placeholder=\"e-mail\"\n                [(ngModel)]=\"evento.email\">\n                <div *ngIf=\"f.email.errors?.required\" class=\"invalid-feedback\">\n                  email é obrigatório\n                </div>\n                <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n                  informe um e-mail válido email@dominio\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"d-flex\">\n              <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n                Cancelar\n              </button>\n              <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"salvarEvento(); openModal($event, templateEvento)\">\n                Salvar Evento\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div class=\"card rounded shadow-sm mt-2 p-3\" *ngIf=\"modoEditar\">\n        <!-- <p>Form value: {{form.controls.lotes.value | json}}</p>\n          <p>Form valid: {{form.controls.lotes.status | json}}</p> -->\n          <div>\n            <div class=\"d-flex\">\n              <h2 class=\"mr-auto\">\n                Lotes do Evento\n              </h2>\n              <h2>\n                <i class=\"fas fa-money-bill-wave\"></i>\n              </h2>\n            </div>\n            <div class=\"form-row p-2\">\n              <div [formGroup]=\"form\" class=\"col\">\n                <div formArrayName=\"lotes\" *ngFor=\"let lote of lotes.controls; let i = index\">\n                  <fieldset [formGroupName]=\"i\" class=\"form-group\">\n                    <legend class=\"d-flex justify-content-between capitalize\">\n                      {{ retornaTituloLote(lotes.get(i+'.nome').value) }}\n                      <button class=\"btn btn-sm btn-outline-warning mb-1 border\" (click)=\"openModalLote($event, templateLote, i)\">\n                        <i class=\"fa fa-window-close my-1\"></i>\n                        <b class=\"ml-1\">Excluir</b>\n                      </button>\n                    </legend>\n                    <div class=\"row mt-2\">\n                      <div class=\"form-group col-md-4\">\n                        <label>Nome</label>\n                        <input\n                        [ngClass]=\"cssValidator(lotes.get(i+'.nome'))\"\n                        type=\"text\" class=\"form-control\"\n                        formControlName=\"nome\"\n                        placeholder=\"Lote\">\n                      </div>\n                      <div class=\"form-group col-md-4\">\n                        <label>Quantidade</label>\n                        <input\n                        [ngClass]=\"cssValidator(lotes.get(i+'.quantidade'))\"\n                        type=\"text\" class=\"form-control\"\n                        formControlName=\"quantidade\"\n                        placeholder=\"000\">\n                      </div>\n                      <div class=\"form-group col-md-4\">\n                        <label>Preço</label>\n                        <input\n                        type=\"text\" currencyMask class=\"form-control\"\n                        [ngClass]=\"cssValidator(lotes.get(i+'.preco'))\"\n                        currencyMask\n                        [options]=\"{ prefix: 'R$', thousands: '.', decimal: ',', align: 'left'}\"\n                        formControlName=\"preco\"\n                        placeholder=\"R$ 0,00\">\n                      </div>\n                      <div class=\"form-group col-md-4\">\n                        <label>Data Início</label>\n                        <input type=\"text\" class=\"form-control\"\n                        bsDatepicker\n                        value=\"{{lotes.get(i+'.dataInicio').value | date: 'dd/MM/yyyy'}\"\n                        placeholder=\"01/01/2023\"\n                        (bsValueChange)=\"mudarValorDataLote($event, i, 'dataInicio')\">\n                      </div>\n                      <div class=\"form-group col-md-4\">\n                        <label>Data Fim</label>\n                        <input type=\"text\" class=\"form-control\"\n                        bsDatepicker\n                        value=\"{{lotes.get(i+'.dataFim').value | date: 'dd/MM/yyyy'}\"\n                        placeholder=\"01/01/2023\"\n                        (bsValueChange)=\"mudarValorDataLote($event, i, 'dataFim')\">\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n            <div class=\"ml-2\">\n              <button (click)=\"adicionarLote()\" class =\"btn btn-sm btn-primary mb-1 ml-2 mr-auto border\">\n                <i class=\"fa fa-plus-circle my-1\"></i>\n                <b class=\"ml-1\">Adicionar</b>\n              </button>\n            </div>\n          </div>\n          <div class=\"card-footer mt-2\">\n            <div class=\"d-flex\">\n              <button class=\"btn btn-outline-secondary mr-auto border\">\n                Cancelar\n              </button>\n              <button class=\"btn btn-success\" [disabled]=\"!form.controls.lotes.valid\" (click)=\"salvarLotes()\">\n                Salvar Lotes\n              </button>\n            </div>\n          </div>\n        </div>\n\n<div class=\"card rounded shadow-sm mt-3\" *ngIf=\"modoEditar\">\n    <div class=\"p-3\">\n      <div class=\"d-flex border-bottom\">\n        <h2 class=\"mr-auto\">\n          Redes Sociais do Evento\n        </h2>\n        <h2>\n          <i class=\"fas fa-share-square\"></i>\n        </h2>\n      </div>\n      <app-redesSociais [eventoId]=\"eventoId\"></app-redesSociais>\n    </div>\n  </div>\n\n        <br><br>\n\n      </div>\n      <div class=\"col-md-4\" *ngIf=\"modoEditar\">\n\n        <div [formGroup]=\"form\" class=\"card-evento-view shadow-sm\">\n          <div class=\"form-row\">\n            <div class=\"form-group m-0\">\n              <input type=\"file\" (change)=\"onFileChange($event)\" #file class=\"form-control is-invalid\" placeholder=\"\" style=\"display: none\">\n            </div>\n          </div>\n          <div class=\"card profile-card-2\">\n            <div class=\"card-img-block mx-auto\">\n              <img class=\"image\" [src]=\"imagemURL\" class=\"img-fluid\" (click)=\"file.click()\" alt=\"Card image cap\"\n              tooltip=\"Upload de nova imagem\" [adaptivePosition]=\"false\" placement=\"bottom\" />\n            </div>\n            <div class=\"card-body pt-3\">\n              <h4>{{evento.tema}}</h4>\n              <p class=\"card-text\">\n                <b>Local:</b> {{evento.local}}\n                <br>\n                <b>Data:</b> {{evento.dataEvento | DateFormatPipe}}\n              </p>\n              <hr>\n              <p class=\"card-text\">\n                <b>Contatos</b><br>\n                <small class=\"text-muted\">Telefone: {{evento.telefone}}</small>\n                <br>\n                <small class=\"text-muted\">e-mail: {{evento.email}}</small>\n              </p>\n              <p class=\"card-text\">\n                Capacidade:\n                <small class=\"text-muted\">{{evento.qtdPessoas}}</small>\n              </p>\n              <div class=\"row\">\n                <div class=\"icon-block col-md-8 iconesSociais\">\n                  <a href=\"\">\n                    <i class=\"\"></i>\n                  </a>\n                </div>\n                <!--div class=\"col-md-4 d-flex justify-content-center\">\n                  <a href=\"#\" class=\"btn btn-outline-primary\">Participar</a>\n                </div-->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #templateEvento>\n      <div class=\"modal-body text-center\">\n        <p>Evento Salvo!</p>\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Ok</button>\n      </div>\n    </ng-template>\n\n    <ng-template #templateLote>\n      <div class=\"modal-body text-center\">\n        <p>Você tem certeza que deseja excluir o lote: {{this.loteAtual.nome}}?</p>\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"removerLote(this.loteAtual.indice)\">Sim</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteLote()\">Não</button>\n      </div>\n    </ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Evento } from '@app/models/Evento';\nimport { EventoService } from '@app/services/evento.service';\nimport { environment } from '@environments/environment';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})\nexport class EventoListaComponent implements OnInit {\n\n  modalRef?: BsModalRef;\n  public eventos: Evento[] = [];\n  public eventoId: number = 0;\n  public pagination = {} as Pagination;\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  public widthImg: number = 150;\n  public marginImg: number = 2;\n\n  public isCollapsed: boolean = false;\n\n  constructor(\n    private eventoService: EventoService,\n    private modalService: BsModalService,\n    private router: Router\n    ) { }\n\n  public ngOnInit() : void {\n    this.pagination = { currentPage: 1, itemsPerPage: 3, totalItems: 1 } as Pagination;\n    this.getEventos();\n  }\n\n  public getEventos(): void {\n    this.eventoService.getEventos(this.pagination.currentPage,\n                                  this.pagination.itemsPerPage).subscribe(\n      (paginatedResult : PaginatedResult<Evento[]>) => {\n        this.eventos = paginatedResult.result;\n        this.pagination = paginatedResult.pagination;\n      },\n      error => console.log(error)\n    );\n  }\n\n  public filtrarEventos(evt: any): void {\n    if (this.termoBuscaChanged.observers.length == 0) {\n\n      this.termoBuscaChanged.pipe(debounceTime(500)).subscribe(\n        filtrarPor => {\n          this.eventoService.getEventos(\n          this.pagination.currentPage,\n          this.pagination.itemsPerPage,\n          filtrarPor\n          ).subscribe(\n            (paginatedResult : PaginatedResult<Evento[]>) => {\n              this.eventos = paginatedResult.result;\n              this.pagination = paginatedResult.pagination;\n            },\n            error => console.log(error)\n          );\n        }\n      )\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  public change() : void {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  public mostraImagem(imagemURL: string): string {\n    return (imagemURL !== '')\n    ? `${environment.apiURL}resources/images/${imagemURL}`\n    : 'assets/semImg.jpg';\n  }\n\n  openModal(event: any, template: TemplateRef<any>, eventoId: number) {\n    event.stopPropagation();\n    this.eventoId = eventoId;\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  public pageChanged(event): void {\n    this.pagination.currentPage = event.page;\n    this.getEventos();\n  }\n\n  confirm(): void {\n    this.modalRef?.hide();\n    this.eventoService.delete(this.eventoId).subscribe(\n      (result: string) => {\n        this.getEventos();\n      }, //next\n      (error: any) => {\n        console.error(error);\n      }, //error\n      () => {}  //complete\n    );\n  }\n\n  decline(): void {\n    this.modalRef?.hide();\n  }\n\n  detalheEvento(id: number): void {\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n}\n","<div class=\"card rounded shadow-sm p-3\">\n  <div class=\"d-flex\">\n    <div class=\"mr-auto\">\n      <div class=\"form-group d-flex\">\n        <div>\n          <div class=\"p-1 sm-mt-1\">\n            Filtro:\n          </div>\n        </div>\n        <input\n        type=\"text\"\n        class=\"form-control ml-1 sm-mt-1\"\n        placeholder=\"Filtrar por Tema e Local\"\n        (input)=\"filtrarEventos($event.target)\"\n        >\n      </div>\n    </div>\n    <div>\n      <a class=\"d-flex btn btn-outline-primary ml-2\" routerLink=\"/eventos/detalhe\">\n        <i class=\"fa fa-plus-circle d-flex\">\n          <b class=\"ml-2 d-none d-sm-block\">evento</b>\n        </i>\n      </a>\n    </div>\n  </div>\n  <!-- <h3>Filtro: {{filtroLista}}</h3> -->\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th class=\"d-none d-md-table-cell\">\n            <button class=\"btn btn-outline-light btn-sm\" type=\"button\" (click)=\"change()\"\n            [attr.aria-expanded]=\"isCollapsed\" aria-controls=\"collapseBasic\">\n            <i class=\"{{!isCollapsed ? 'fa fa-eye-slash' : 'fa fa-eye'}}\"></i>\n            {{!isCollapsed ? \"Ocultar\" : \"Exibir\"}}\n          </button>\n        </th>\n        <th>#</th>\n        <th>Tema</th>\n        <th class=\"d-none d-md-table-cell\">Local</th>\n        <th>Data</th>\n        <th class=\"d-none d-md-table-cell\">Ingressos</th>\n        <th class=\"d-none d-md-table-cell\">Lote</th>\n        <th>Opções</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"eventos && eventos.length\">\n      <tr *ngFor=\"let evento of eventos\" (click)=\"detalheEvento(evento.id)\" style=\"cursor: pointer\">\n        <td class=\"d-none d-md-table-cell\">\n          <div id=\"collapseBasic\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\">\n            <img [src]=\"mostraImagem(evento.imagemURL)\" alt=\"\"\n            [style.width.px]=\"widthImg\"\n            [style.margin.px]=\"marginImg\">\n\n          </div>\n        </td>\n        <td>{{evento.id}}</td>\n        <td >{{evento.tema}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.local}}</td>\n        <td>{{evento.dataEvento | DateFormatPipe}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.qtdPessoas}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.lotes[0]?.nome | uppercase}}</td>\n        <td>\n          <div class=\"btn-group\" style=\"display: flex\">\n            <button type=\"button\" class=\"btn btn-danger btn-md\" tooltip=\"Excluir\" (click)=\"openModal($event, template, evento.id)\">\n              <i class=\"fa fa-trash\"></i></button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot *ngIf=\"!eventos.length\">\n        <tr>\n          <td colspan=\"8\">\n            <h4>Nenhum evento encontrado</h4>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n\n    <div class=\"d-flex justify-content-center\">\n      <pagination\n      [boundaryLinks]=\"true\"\n      [totalItems]=\"pagination.totalItems\"\n      [itemsPerPage]=\"pagination.itemsPerPage\"\n      [(ngModel)]=\"pagination.currentPage\"\n      (pageChanged)=\"pageChanged($event)\"\n      [align]=\"true\"\n      pageBtnClass=\"btn\"\n      previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n  </div>\n</div>\n</div>\n\n<!-- {{eventos | json}} -->\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Você tem certeza que deseja excluir o Evento de código {{this.eventoId}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >Não</button>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eventos',\r\n  templateUrl: './eventos.component.html',\r\n  styleUrls: ['./eventos.component.scss'],\r\n  // providers: [EventoService]\r\n})\r\n\r\nexport class EventosComponent {\r\n}\r\n","<app-titulo [titulo]=\"'Eventos'\" [iconClass]=\"'fa fa-calendar-alt'\" [botaoListar]=\"true\"></app-titulo>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-titulo [titulo] = \"'Home'\" [iconClass]=\"'fas fa-home'\"></app-titulo>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { setTime } from 'ngx-bootstrap/chronos/utils/date-setters';\nimport { debounceTime, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-palestrante-detalhe',\n  templateUrl: './palestrante-detalhe.component.html',\n  styleUrls: ['./palestrante-detalhe.component.scss']\n})\nexport class PalestranteDetalheComponent implements OnInit {\n\n  public form!: FormGroup;\n  public situacaoDoForm = '';\n  public corDaDescricao = '';\n\n  constructor(\n    private fb: FormBuilder,\n    public palestranteService: PalestranteService\n  ) { }\n\n  ngOnInit() {\n    this.validation();\n    this.verificaForm();\n    this.loadSpeaker();\n  }\n\n  private loadSpeaker(): void {\n    this.palestranteService.getPalestrante().subscribe(\n      (palestrante: Palestrante) => {\n        this.form.patchValue(palestrante);\n      }\n    )\n  }\n\n  private validation(): void {\n    this.form = this.fb.group({\n      miniCurriculo: ['']\n    })\n  }\n\n  public get f(): any {\n    return this.form.controls;\n  }\n\n  private verificaForm(): void {\n    this.form.valueChanges\n    .pipe(\n      map(() => {\n        this.situacaoDoForm = 'Minicurriculo está sendo atualizado!';\n        this.corDaDescricao = 'text-warning';\n      }),\n      debounceTime(1000)\n    ).subscribe(\n      () => {\n        this.palestranteService\n          .put({...this.form.value})\n          .subscribe(() => {\n            this.situacaoDoForm = 'Minicurriculo foi atualizado!';\n            this.corDaDescricao = 'text-success';\n\n            setTimeout(() => {\n              this.situacaoDoForm = 'Minicurriculo foi carregado!';\n              this.corDaDescricao = 'text-muted';\n\n            }, 2000)\n          },\n          (error) => {\n              console.log(error);\n          }\n        );\n      }\n    )\n  }\n}\n","<form [formGroup]=\"form\">\n    <div class=\"form-group\">\n        <label class=\"d-flex\">Minicurrículo:</label>\n        <textarea class=\"form-control\" id=\"exampleTextarea\" rows=\"5\"\n        formControlName=\"miniCurriculo\"\n        placeholder=\"Digite aqui sua descrição.\"\n        [ngClass]=\"{'is-invalid': f.miniCurriculo.errors && f.miniCurriculo.toutched}\"></textarea>\n        <small class=\"form-text\"\n        [ngClass]=\"corDaDescricao\">\n            {{situacaoDoForm}}\n        </small>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { environment } from '@environments/environment';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-palestrante-lista',\n  templateUrl: './palestrante-lista.component.html',\n  styleUrls: ['./palestrante-lista.component.scss']\n})\n\nexport class PalestranteListaComponent implements OnInit {\n\n  public palestrantes: Palestrante[] = [];\n  public eventoId = 0;\n  public pagination = {} as Pagination;\n\n  constructor(private palestranteService: PalestranteService,\n              private modalService: BsModalService,\n              private router: Router) { }\n\n  public ngOnInit(): void {\n    this.pagination = { currentPage: 1, itemsPerPage: 3, totalItems: 1 } as Pagination;\n    this.getSpeakers();\n  }\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  public speakersFilter(evt: any): void {\n    if (this.termoBuscaChanged.observers.length == 0) {\n\n      this.termoBuscaChanged.pipe(debounceTime(500)).subscribe(\n        filtrarPor => {\n          this.palestranteService.getPalestrantes(\n          this.pagination.currentPage,\n          this.pagination.itemsPerPage,\n          filtrarPor\n          ).subscribe(\n            (paginatedResult : PaginatedResult<Palestrante[]>) => {\n              this.palestrantes = paginatedResult.result;\n              this.pagination = paginatedResult.pagination;\n            },\n            error => console.log(error)\n          );\n        }\n      )\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  public getImageURL(imageName: string): string {\n    if (imageName)\n      return environment.apiURL + `resources/perfil/${imageName}`;\n    else\n      return './assets/img/perfil.png';\n  }\n\n  public getSpeakers(): void {\n\n    this.palestranteService\n    .getPalestrantes(this.pagination.currentPage,\n                       this.pagination.itemsPerPage)\n    .subscribe(\n      (paginatedResult : PaginatedResult<Palestrante[]>) => {\n      this.palestrantes = paginatedResult.result;\n      this.pagination = paginatedResult.pagination;\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<div class=\"card rounded shadow-sm p-3\">\n\n  <div>\n    <div class=\"flex-fill\">\n      <div class=\"form-group\">\n        <div>\n          <div class=\"p-1 sm-mt-1\">\n            Filtro:\n          </div>\n        </div>\n        <input\n        type=\"text\"\n        class=\"form-control ml-1 sm-mt-1 col-sm-6\"\n        placeholder=\"Filtrar pelo Nome\"\n        (input)=\"speakersFilter($event.target)\"\n        >\n      </div>\n    </div>\n  <div>\n  <div *ngIf=\"palestrantes && palestrantes.length\" class=\"row mt-3\">\n    <div class=\"col-md-4 mb-4 d-flex align-items-stretch\" *ngFor=\"let palestrante of palestrantes\">\n\n      <div class=\"card bg-primary\">\n\n        <div class=\"d-flex align-self-center pt-3\">\n            <img\n            [src]=\"getImageURL(palestrante.user.imagemURL)\"\n            class=\"rounded-circle\"\n            width=\"120\" height=\"120\">\n        </div>\n        <div class=\"card-body\">\n          <div class=\"h4 text-center mb-2\">@{{palestrante.user.userName}}</div>\n          <div class=\"h7 text-bold pb-1\"><b>Nome:</b> {{palestrante.user.primeiroNome + ' ' + palestrante.user.ultimoNome}}</div>\n          <div class=\"h7\">\n            {{palestrante.miniCurriculo}}\n          </div>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">\n            <div class=\"row\">\n              <div class=\"col-6 text-center border-right\">\n                <div class=\"h5\">0</div>\n                <div class=\"h6 text-muted\">Eventos Criados</div>\n              </div>\n              <div class=\"col-6 text-center\">\n                <div class=\"h5\">0</div>\n                <div class=\"h6 text-muted\">Eventos como Palestrante</div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-palestrantes',\r\n  templateUrl: './palestrantes.component.html',\r\n  styleUrls: ['./palestrantes.component.scss']\r\n})\r\nexport class PalestrantesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-titulo [titulo] = \"'Palestrantes'\" [iconClass]=\"'fa fa-user'\"></app-titulo>\r\n<app-palestrante-lista></app-palestrante-lista>\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { RedeSocial } from '@app/models/RedeSocial';\r\nimport { RedeSocialService } from '@app/services/redeSocial.service';\r\n\r\n@Component({\r\n  selector: 'app-redesSociais',\r\n  templateUrl: './redesSociais.component.html',\r\n  styleUrls: ['./redesSociais.component.scss']\r\n})\r\nexport class RedesSociaisComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  @Input() eventoId = 0;\r\n  public formRS: FormGroup;\r\n  public redeSocialAtual = { id: 0, nome: '', indice: 0 };\r\n\r\n  public get redesSociais(): FormArray {\r\n    return this.formRS.get('redesSociais') as FormArray;\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private redeSocialService: RedeSocialService,\r\n    private modalService: BsModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.carregarRedesSociais(this.eventoId)\r\n    this.validation();\r\n  }\r\n\r\n  private carregarRedesSociais(id: number = 0): void {\r\n    let origem = 'palestrante';\r\n\r\n    if (this.eventoId !== 0) origem = 'evento';\r\n\r\n    this.redeSocialService\r\n      .getRedesSociais(origem, id)\r\n      .subscribe(\r\n        (redeSocialRetorno: RedeSocial[]) => {\r\n          redeSocialRetorno.forEach((redeSocial) => {\r\n            this.redesSociais.push(this.criarRedeSocial(redeSocial))\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  public validation(): void {\r\n    this.formRS = this.fb.group({\r\n      redesSociais: this.fb.array([])\r\n    })\r\n  }\r\n\r\n  adicionarRedeSocial(): void {\r\n    this.redesSociais.push(this.criarRedeSocial({ id: 0 } as RedeSocial));\r\n  }\r\n\r\n  criarRedeSocial(redeSocial: RedeSocial): FormGroup {\r\n    return this.fb.group({\r\n      id: [redeSocial.id],\r\n      nome: [redeSocial.nome, Validators.required],\r\n      url: [redeSocial.url, Validators.required]\r\n    });\r\n  }\r\n\r\n  public retornaTitulo(nome: string): string {\r\n    return nome === null || nome === '' ? 'Rede Social' : nome;\r\n  }\r\n\r\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\r\n    return { 'is-invalid': campoForm.errors && campoForm.touched };\r\n  }\r\n\r\n  public salvarRedesSociais(): void {\r\n    let origem = 'palestrante';\r\n\r\n    if (this.eventoId !== 0) origem = 'evento';\r\n\r\n    if (this.formRS.controls.redesSociais.valid) {\r\n      this.redeSocialService\r\n        .saveRedesSociais(origem, this.eventoId, this.formRS.value.redesSociais)\r\n        .subscribe(\r\n          () => {\r\n            // this.toastr.success('Redes Sociais foram salvas com Sucesso!', 'Sucesso!');\r\n          },\r\n          (error: any) => {\r\n            // this.toastr.error('Erro ao tentar salvar Redes Sociais.', 'Erro');\r\n            console.error(error);\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  public removerRedeSocial(template: TemplateRef<any>, indice: number): void {\r\n    this.redeSocialAtual.id = this.redesSociais.get(indice + '.id').value;\r\n    this.redeSocialAtual.nome = this.redesSociais.get(indice + '.nome').value;\r\n    this.redeSocialAtual.indice = indice;\r\n\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\r\n  }\r\n\r\n  confirmDeleteRedeSocial(): void {\r\n    let origem = 'palestrante';\r\n    this.modalRef.hide();\r\n\r\n    if (this.eventoId !== 0) origem = 'evento';\r\n\r\n    this.redeSocialService\r\n      .deleteRedeSocial(origem, this.eventoId, this.redeSocialAtual.id)\r\n      .subscribe(\r\n        () => {\r\n          // this.toastr.success('Rede Social deletado com sucesso', 'Sucesso');\r\n          this.redesSociais.removeAt(this.redeSocialAtual.indice);\r\n        },\r\n        (error: any) => {\r\n          // this.toastr.error(\r\n          //   `Erro ao tentar deletar o Rede Social ${this.redeSocialAtual.id}`,\r\n          //   'Erro'\r\n          // );\r\n          console.error(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  declineDeleteRedeSocial(): void {\r\n    this.modalRef.hide();\r\n  }\r\n}\r\n","<p>Clique em Rede Social para adicionar e preencher novas Redes Sociais</p>\r\n<div class=\"form-row p-1\">\r\n  <div [formGroup]=\"formRS\" class=\"col\">\r\n    <div formArrayName=\"redesSociais\" *ngFor=\"let redeSocial of redesSociais.controls; let i=index\">\r\n      <fieldset [formGroupName]=\"i\" class=\"form-group\">\r\n        <legend class=\"d-flex justify-content-between capitalize\">\r\n          <i class=\"fab fa-{{ retornaTitulo(redesSociais.get(i+'.nome').value) }}\"></i>\r\n          <button class=\"btn btn-sm btn-warning mb-1\" (click)=\"removerRedeSocial(template, i)\">remove</button>\r\n        </legend>\r\n        <div class=\"row\">\r\n          <div class=\"form-group col-md-4\">\r\n            <label>Nome</label>\r\n            <select class=\"form-control form-control-sm\" [ngClass]=\"cssValidator(redesSociais.get(i+'.nome'))\" formControlName=\"nome\">\r\n              <option value=\"\">Selecione</option>\r\n              <option value=\"youtube\">Youtube</option>\r\n              <option value=\"instagram\">Instagram</option>\r\n              <option value=\"facebook\">Facebook</option>\r\n              <option value=\"twitter\">Twitter</option>\r\n              <option value=\"google\">Google</option>\r\n              <option value=\"linkedin\">Linkedin</option>\r\n              <option value=\"pinterest\">Pinterest</option>\r\n              <option value=\"whatsapp\">Whatsapp</option>\r\n              <option value=\"telegram\">Telegram</option>\r\n              <option value=\"skype\">Skype</option>\r\n              <option value=\"vimeo\">Vimeo</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group col-md-8\">\r\n            <label>Link</label>\r\n            <input type=\"text\" prefix=\"http://\" mask=\"\" [ngClass]=\"cssValidator(redesSociais.get(i+'.url'))\"\r\n              formControlName=\"url\" class=\"form-control form-control-sm\" placeholder=\"URL\">\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n    <button (click)=\"adicionarRedeSocial()\" class =\"btn btn-sm btn-primary mb-1 ml-2 mr-auto border\">\r\n      <i class=\"fa fa-plus-circle my-1\"></i>\r\n      <b class=\"ml-1\">Adicionar</b>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card-footer\">\r\n  <div class=\"d-flex\">\r\n    <button class=\"btn btn-outline-secondary mr-auto border\">\r\n      Cancelar Alteração\r\n    </button>\r\n    <button [disabled]=\"!formRS.controls.redesSociais.valid\" (click)=\"salvarRedesSociais()\" class=\"btn btn-success\">\r\n      Salvar Redes Sociais\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Tem certeza que quer deletar {{this.redeSocialAtual.nome}}?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeleteRedeSocial()\">Sim</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteRedeSocial()\">Não</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserLogin } from '@app/models/Identity/UserLogin';\r\nimport { UserService } from '@app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model = {} as UserLogin;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router\r\n    ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public login(): void {\r\n    this.userService.login(this.model).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('eventos');\r\n      },\r\n      (error: any) => {\r\n        if (error.status == 401)\r\n          console.log('usuário ou senha inválidos');\r\n        else console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card border-primary d-flex mx-auto mt-4 vh-100\" style=\"max-width: 25rem; max-height: 35rem;\">\n  <div class=\"card-header\">LOGIN</div>\n\n  <div class=\"card-body\">\n    <form #loginForm=\"ngForm\" class=\"form-signin text-center\" (ngSubmit)=\"login()\">\n      <i class=\"fa fa-users fa-lg mb-2\"></i>\n\t\t\t<h1 class=\"h3 mb-2 font-weight-normal\">Entrar com</h1>\n\t\t\t<label for=\"username\" class=\"sr-only\">Usuário</label>\n\t\t\t<input\n      [(ngModel)]=\"model.userName\"\n      name=\"username\"\n      type=\"email\"\n      id=\"username\"\n      class=\"form-control\"\n      placeholder=\"Usuário\"\n      required\n      >\n\t\t\t<label for=\"password\" class=\"sr-only\">Password</label>\n\t\t\t<input\n      [(ngModel)]=\"model.password\"\n      name=\"password\"\n      type=\"password\"\n      id=\"password\"\n      class=\"form-control\"\n      placeholder=\"Senha\"\n      required\n      >\n\t\t\t<button [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-block mt-1\" type=\"submit\">Entrar</button>\n\t\t\t<p class=\"mt-4 mb-2 mt-5 text-muted\">Não tem login? Cadastre-se abaixo</p>\n\t\t\t<a class=\"btn btn-lg btn-link btn-block text-secondary\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n\t\t</form>\n  </div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { User } from '@app/models/Identity/User';\nimport { UserUpdate } from '@app/models/Identity/UserUpdate';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { UserService } from '@app/services/user.service';\n\n@Component({\n  selector: 'app-perfil-detalhe',\n  templateUrl: './perfil-detalhe.component.html',\n  styleUrls: ['./perfil-detalhe.component.scss']\n})\nexport class PerfilDetalheComponent implements OnInit {\n\n  @Output() changeFormValue = new EventEmitter();\n\n  userUpdate = {} as UserUpdate;\n  form!: FormGroup;\n\n  constructor(\n    public fb: FormBuilder,\n    public userService: UserService,\n    public palestranteService: PalestranteService,\n    private router: Router\n    // private toaster: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.validation();\n    this.loadUser();\n    this.formVerify();\n   }\n\n  private formVerify(): void {\n    this.form.valueChanges\n      .subscribe(() => this.changeFormValue.emit({...this.form.value}) )\n  }\n\n  private loadUser(): void {\n    this.userService.getUser().subscribe(\n      (userRetorno: UserUpdate) => {\n        console.log(userRetorno);\n        this.userUpdate = userRetorno;\n        this.form.patchValue(this.userUpdate);\n        // this.toaster.success('Usuário Carregado', 'Sucesso');\n      },\n      (error) => {\n        console.error(error);\n        // this.toaster.error('Usuário não cargado', 'Erro');\n        this.router.navigate(['/dashboard']);\n      }\n    );\n  }\n\n  private validation(): void {\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n\n    this.form = this.fb.group({\n      userName: [''],\n      imagemURL: [''],\n      titulo: ['NaoInformado', Validators.required],\n      funcao: ['NaoInformado', Validators.required],\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', Validators.required],\n      descricao: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required],\n    }, formOptions);\n  }\n\n  get f(): any { return this.form.controls; }\n\n  onSubmit(): void {\n    this.userRefresh();\n  }\n\n  public userRefresh() {\n    this.userUpdate = {...this.form.value};\n\n    if (this.f.funcao.value == 'Palestrante') {\n      this.palestranteService.post().subscribe();\n    }\n\n    this.userService.updateUser(this.userUpdate).subscribe(\n      () => /*this.toaster.success('Usuário atualizado!', 'Sucesso')*/ {},\n      (error) => {\n        //this.toaster.error(error.error);\n        console.error(error);\n      }\n    );\n  }\n\n  public resetForm() : void{\n    this.form.reset();\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n      <!-- <p>Form value: {{form.value | json}}</p>\n      <p>Form valid: {{form.valid | json}}</p> -->\n  <div class=\"form-row\">\n    <div class=\"form-group col-12\">\n      <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n    </div>\n    <div class=\"form-group col-sm-6\">\n      <label>Título</label>\n      <select class=\"form-control form-control-sm\" formControlName=\"titulo\">\n        <option value=\"NaoInformado\">Não Informado</option>\n        <option value=\"Tecnologo\">Tecnólogo(a)</option>\n        <option value=\"Bacharel\">Bacharel</option>\n        <option value=\"Especialista\">Especialista</option>\n        <option value=\"PosGraduado\">Pós Graduado(a)</option>\n        <option value=\"Mestrado\">Mestre</option>\n        <option value=\"Doutorado\">Doutor(a)</option>\n        <option value=\"PosDoutorado\">Pós Doc</option>\n      </select>\n    </div>\n    <div class=\"form-group col-sm-6\">\n      <label>Função</label>\n      <select class=\"form-control form-control-sm\" formControlName=\"funcao\">\n        <option value=\"\"></option>\n        <option value=\"NaoInformado\">Não informado</option>\n        <option value=\"Participante\">Participante</option>\n        <option value=\"Palestrante\">Palestrante</option>\n      </select>\n    </div>\n    <div class=\"form-group col-sm-6 mt-1\">\n      <label>Primeiro Nome</label>\n      <input type=\"text\" class=\"form-control form-control-sm\"\n      formControlName=\"primeiroNome\"\n      [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched}\"\n      placeholder=\"Insira o primeiro nome\"/>\n      <div class=\"invalid-feedback\">\n        primeiro nome é obrigatório\n      </div>\n    </div>\n    <div class=\"form-group col-sm-6 mt-1\">\n      <label>Último Nome</label>\n      <input type=\"text\" class=\"form-control form-control-sm\"\n      formControlName=\"ultimoNome\"\n      [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched}\"\n      placeholder=\"Insira o último nome\"/>\n      <div class=\"invalid-feedback\">\n        último nome é obrigatório\n      </div>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-sm-6\">\n      <label>E-mail</label>\n      <input type=\"text\" class=\"form-control form-control-sm\"\n      formControlName=\"email\"\n      [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\"\n      placeholder=\"Insira seu e-mail\"/>\n      <div *ngIf=\"f.email.errors?.required\" class=\"invalid-feedback\">\n        e-mail é obrigatório\n      </div>\n      <div *ngIf=\"f.email.errors?.email\" class=\"invalid-feedback\">\n        informe um e-mail válido: email@dominio\n      </div>\n    </div>\n    <div class=\"form-group col-sm-6\">\n      <label>Telefone</label>\n      <input type=\"phone\" class=\"form-control form-control-sm\"\n      formControlName=\"phoneNumber\"\n      [ngClass]=\"{'is-invalid': f.phoneNumber.errors && f.phoneNumber.touched}\"\n      placeholder=\"Insira seu telefone\"/>\n      <div class=\"invalid-feedback\">\n        telefone é obrigatório\n      </div>\n    </div>\n    <div class=\"form-group col-12\">\n      <label>Descrição</label>\n      <input type=\"text\" class=\"form-control\"\n      formControlName=\"descricao\"\n      [ngClass]=\"{'is-invalid': f.descricao.errors && f.descricao.touched}\"\n      placeholder=\"Insira uma breve descrição\"/>\n      <div class=\"invalid-feedback\">\n        a descrição é obrigatória\n      </div>\n    </div>\n  </div>\n  <div>\n    <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n    <p>Caso mude de senha, preencha os campos abaixo:</p>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-sm\">\n      <label>Senha</label>\n      <input type=\"password\" class=\"form-control\"\n      formControlName=\"password\"\n      [ngClass]=\"{'is-invalid': f.password.errors && f.password.touched}\"\n      placeholder=\"Insira uma senha\"/>\n      <div *ngIf=\"f.password.errors?.required\"\n      class=\"invalid-feedback\">\n      senha é obrigatório\n    </div>\n    <div *ngIf=\"f.password.errors?.minlength\"\n    class=\"invalid-feedback\">\n    a senha deve conter no mínimo 6 caracteres\n  </div>\n</div>\n<div class=\"form-group col-sm\">\n  <label>Confirmar Senha</label>\n  <input type=\"password\" class=\"form-control\"\n  formControlName=\"confirmPassword\"\n  [ngClass]=\"{'is-invalid': f.confirmPassword.errors && f.confirmPassword.touched}\"\n  placeholder=\"Confirme a senha\"/>\n  <div *ngIf=\"f.confirmPassword.errors?.required\"\n  class=\"invalid-feedback\">\n  é preciso confirmar a senha.\n</div>\n<div *ngIf=\"f.confirmPassword.errors?.mustMatch\"\nclass=\"invalid-feedback\">\nas senhas devem coincidir\n</div>\n</div>\n</div>\n<div class=\"card-footer d-flex\">\n    <button class=\"btn btn-outline-secondary mr-auto\" (click)=\"resetForm()\">\n      Cancelar Alteração\n    </button>\n    <button class=\"btn btn-success\" type=\"submit\">\n      Salvar Alterações\n    </button>\n</div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserUpdate } from '@app/models/Identity/UserUpdate';\nimport { UserService } from '@app/services/user.service';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n\n\n  user = {} as UserUpdate;\n  public imagemURL = '';\n  public file: File;\n\n  public get isSpeaker(): boolean {\n    return this.user.funcao === 'Palestrante'\n  };\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void { }\n\n  public setFormValue(user: UserUpdate): void {\n    this.user = user;\n    if (this.user.imagemURL)\n      this.imagemURL = environment.apiURL + `resources/perfil/${this.user.imagemURL}`;\n    else\n      this.imagemURL = './assets/img/perfil.jpg';\n  }\n\n  onFileChange(ev: any): void {\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImage();\n  }\n\n  private uploadImage(): void {\n    this.userService\n      .postUpload(this.file)\n      .subscribe();\n  }\n}\n","<app-titulo [titulo] = \"'Perfil' + (isSpeaker ? ' Palestrante' : '')\" [iconClass]=\"'fa fa-address-card'\"></app-titulo>\n\n<div class=\"card rounded shadow-sm\">\n    <div class=\"row p-3\">\n      <div class=\"col-lg-3 pt-1\">\n        <div class=\"card mb-3 bg-primary\">\n          <div class=\"card-header\">\n            <input type=\"file\" #file (change)=\"onFileChange($event)\" style=\"display: none;\">\n          </div>\n          <div class=\"d-flex align-self-center pt-3\">\n              <img\n              [src]=\"imagemURL\"\n              (click)=\"file.click()\"\n              class=\"rounded-circle\"\n              style=\"cursor: pointer;\"\n              name=\"aboutme\" width=\"120\" height=\"120\" >\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@{{user.userName}}</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> {{user.primeiroNome + ' ' + user.ultimoNome}}</div>\n            <div class=\"h7\">\n              {{user.descricao}}\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Eventos Criados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Eventos como {{isSpeaker ? 'Palestrante' : 'Participante'}}</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"card-footer\"></div>\n        </div>\n      </div>\n      <div class=\"col-lg-9\">\n        <tabset>\n          <tab class=\"border p-3\">\n            <ng-template tabHeading=\"\">\n              <i class=\"fa fa-address-card mr-2\"></i><span>Perfil</span>\n            </ng-template>\n            <app-perfil-detalhe (changeFormValue)=\"setFormValue($event)\"></app-perfil-detalhe>\n          </tab>\n          <tab *ngIf=\"isSpeaker\" class=\"border p-3\">\n          <ng-template tabHeading=\"\">\n            <i class=\"fa fa-user mr-2\"></i><span>Palestrante</span>\n          </ng-template>\n          <div class=\"form-group\">\n            <h3 class=\"border-bottom\">Palestrante</h3>\n          </div>\n            <app-palestrante-detalhe></app-palestrante-detalhe>\n          </tab>\n          <tab *ngIf=\"isSpeaker\" class=\"border p-3\">\n            <ng-template tabHeading=\"\">\n              <i class=\"fa fa-share-square mr-2\"></i><span>Rede Social</span>\n            </ng-template>\n            <div class=\"form-group\">\n              <h3 class=\"border-bottom\">Rede Social</h3>\n              <app-redesSociais></app-redesSociais>\n            </div>\n          </tab>\n        </tabset>\n      </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { User } from '@app/models/Identity/User';\nimport { UserService } from '@app/services/user.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  user = {} as User;\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private userService: UserService,\n              private router: Router) { }\n\n  get f(): any { return this.form.controls; }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation() : void {\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n\n    this.form = this.fb.group({\n        primeiroNome: ['', Validators.required],\n        ultimoNome: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        userName: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required],\n      }, formOptions);\n  }\n\n  register(): void {\n    this.user = { ...this.form.value };\n    this.userService.register(this.user).subscribe(\n      () => this.router.navigateByUrl('/user/perfil'),\n      (error: any) => console.log(error)\n    )\n  }\n}\n","<div class=\"row mt-4\">\n\n\t<div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n\t\t<div class=\"text-center col-md-12 my-auto side-heder\">\n\t\t\t<h1>Cadastro de Usuário</h1>\n\t\t\t<img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\n\t\t<form [formGroup]=\"form\" class=\"p-1\" (ngSubmit)=\"register()\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" class=\"form-control\"\n          formControlName=\"primeiroNome\"\n          [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched}\"\n          placeholder=\"Insira o primeiro nome\" />\n          <div class=\"invalid-feedback\">\n            primeiro nome é obrigatório\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Último Nome</label>\n          <input type=\"text\" class=\"form-control\"\n          formControlName=\"ultimoNome\"\n          [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched}\"\n          placeholder=\"Insira o último nome\" />\n          <div class=\"invalid-feedback\">\n            último nome é obrigatório\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"email\"\n        [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\"\n        placeholder=\"Insira o nome completo\" />\n        <div *ngIf=\"f.email.errors?.required\" class=\"invalid-feedback\">\n          e-mail é obrigatório\n        </div>\n        <div *ngIf=\"f.email.errors?.email\" class=\"invalid-feedback\">\n          informe um e-mail válido: email@dominio\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"userName\"\n        [ngClass]=\"{'is-invalid': f.userName.errors && f.userName.touched}\"\n        placeholder=\"Insira o nome de usuário\" />\n        <div class=\"invalid-feedback\">\n          usuário é obrigatório\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\"\n          formControlName=\"password\"\n          [ngClass]=\"{'is-invalid': f.password.errors && f.password.touched}\"\n          placeholder=\"Digite uma senha\" />\n          <div *ngIf=\"f.password.errors?.required\"\n          class=\"invalid-feedback\">\n            senha é obrigatório\n          </div>\n          <div *ngIf=\"f.password.errors?.minlength\"\n          class=\"invalid-feedback\">\n            a senha deve conter no mínimo 6 caracteres\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\"\n          formControlName=\"confirmPassword\"\n          [ngClass]=\"{'is-invalid': f.confirmPassword.errors && f.confirmPassword.touched}\"\n          placeholder=\"Confirme a senha\" />\n          <div *ngIf=\"f.confirmPassword.errors?.required\"\n          class=\"invalid-feedback\">\n            é preciso confirmar a senha.\n          </div>\n          <div *ngIf=\"f.confirmPassword.errors?.mustMatch\"\n          class=\"invalid-feedback\">\n            as senhas devem coincidir\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"customCheck1\" checked=\"\">\n          <label class=\"form-check-label\">\n            Eu concordo com os <a href=\"#\">Termos de Uso</a>.\n          </label>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button [disabled]=\"!form.valid\" class=\"btn btn-lg btn-success btn-block px-5\" type=\"submit\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    // private toaster: ToastrService\n  ) {}\n\n  canActivate(): boolean {\n    if (localStorage.getItem('user') !== null)\n      return true;\n\n    // this.toaster.info('Usuário não autenticado');\n    this.router.navigate(['/user/login']);\n    return false;\n  }\n}\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { Constants } from '../util/constants';\r\n\r\n@Pipe({\r\n  name: 'DateFormatPipe'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return super.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}\r\n","import { AbstractControl, FormGroup } from \"@angular/forms\"\n\nexport class ValidatorField {\n  static MustMatch(controlName: string, matchingControlName: string): any {\n    return (group: AbstractControl) => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return null;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true })\n      } else {\n        matchingControl.setErrors(null);\n      }\n      return null;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from '@app/models/Identity/User';\nimport { UserService } from '@app/services/user.service';\nimport { catchError, take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private userService: UserService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.userService.currentUser$.pipe(take(1)).subscribe((user: User) => {\n      currentUser = user\n\n      if (currentUser) {\n        request = request.clone({\n            setHeaders: {\n              Authorization: `Bearer ${currentUser.token}`\n            }\n          }\n        );\n      }\n    });\n\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          localStorage.removeItem('user')\n        }\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","export class Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Evento } from '../models/Evento';\r\nimport { $ } from 'protractor';\r\nimport { environment } from '@environments/environment';\r\nimport { PaginatedResult } from '@app/models/Pagination';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\n@Injectable(\r\n//   {providedIn: 'root'}\r\n)\r\nexport class EventoService {\r\n  baseURL = environment.apiURL + 'api/eventos';\r\n  // tokenHeader = new HttpHeaders({ 'Authorization': `Bearer ${JSON.parse(localStorage.getItem('user')).token}` });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getEventos(page?: number, itemsPerPage?: number, term?: string) : Observable<PaginatedResult<Evento[]>> {\r\n    const paginatedResult: PaginatedResult<Evento[]> = new PaginatedResult<Evento[]>();\r\n\r\n    let params = new HttpParams;\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page.toString());\r\n      params = params.append('pageSize', itemsPerPage.toString());\r\n    }\r\n\r\n    if (term != null && term != '') {\r\n      params = params.append('term', term)\r\n    }\r\n\r\n    return this.http\r\n      .get<Evento[]>(this.baseURL, {observe: 'response', params })\r\n      .pipe(\r\n        take(1),\r\n        map((response) => {\r\n          paginatedResult.result = response.body;\r\n          if(response.headers.has('Pagination')) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      )\r\n      ;\r\n  }\r\n\r\n  public getEventoById(id : number) : Observable<Evento> {\r\n    return this.http.get<Evento>(`${this.baseURL}/${id}`);\r\n  }\r\n\r\n  public post(evento: Evento) : Observable<Evento> {\r\n    return this.http.post<Evento>(this.baseURL, evento);\r\n  }\r\n\r\n  public put(evento: Evento) : Observable<Evento> {\r\n    return this.http.put<Evento>(`${this.baseURL}/${evento.id}`, evento);\r\n  }\r\n\r\n  public delete(id : number) : Observable<any> {\r\n    return this.http.delete(`${this.baseURL}/${id}`);\r\n  }\r\n\r\n  postUpload(eventoId: number, file: File): Observable<Evento> {\r\n    const fileToUpload = file[0] as File;\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload);\r\n\r\n    return this.http.post<Evento>(`${this.baseURL}/upload-image/${eventoId}`, formData);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Lote } from '@app/models/Lote';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LoteService {\n\n  baseURL = 'https://localhost:5001/api/lotes';\n\n  constructor(private http: HttpClient) { }\n\n  public getLotesByEventoId(eventoId: number) : Observable<Lote[]> {\n    return this.http\n      .get<Lote[]>(`${this.baseURL}/${eventoId}`)\n  }\n\n  public saveLote(eventoId: number, lotes: Lote[]) : Observable<Lote[]> {\n    return this.http\n      .put<Lote[]>(`${this.baseURL}/${eventoId}`, lotes);\n  }\n\n  public deleteLote(eventoId: number, loteId: number) : Observable<any> {\n    return this.http\n      .delete(`${this.baseURL}/${eventoId}/${loteId}`);\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PaginatedResult } from '@app/models/Pagination';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PalestranteService {\n\n  baseURL = environment.apiURL + 'api/palestrantes';\n  // tokenHeader = new HttpHeaders({ 'Authorization': `Bearer ${JSON.parse(localStorage.getItem('user')).token}` });\n\n  constructor(private http: HttpClient) { }\n\n  public getPalestrantes(page?: number, itemsPerPage?: number, term?: string) : Observable<PaginatedResult<Palestrante[]>> {\n    const paginatedResult: PaginatedResult<Palestrante[]> = new PaginatedResult<Palestrante[]>();\n\n    let params = new HttpParams;\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page.toString());\n      params = params.append('pageSize', itemsPerPage.toString());\n    }\n\n    if (term != null && term != '') {\n      params = params.append('term', term)\n    }\n\n    return this.http\n    .get<Palestrante[]>(this.baseURL + '/all', {observe: 'response', params })\n    .pipe(\n      take(1),\n      map((response) => {\n        paginatedResult.result = response.body;\n        if(response.headers.has('Pagination')) {\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n      )\n      ;\n    }\n\n    public getPalestrante() : Observable<Palestrante> {\n      return this.http.get<Palestrante>(`${this.baseURL}`).pipe(take(1));\n    }\n\n    public post() : Observable<Palestrante> {\n      return this.http.post<Palestrante>(this.baseURL,{} as Palestrante);\n    }\n\n    public put(palestrante: Palestrante) : Observable<Palestrante> {\n      return this.http.put<Palestrante>(`${this.baseURL}`, palestrante);\n    }\n  }\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RedeSocial } from '@app/models/RedeSocial';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedeSocialService {\n  baseURL = environment.apiURL + 'api/redesSociais';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @returns Observable<RedeSocial[]>\n   */\n  public getRedesSociais(origem: string, id: number): Observable<RedeSocial[]> {\n    let URL =\n      id === 0\n        ? `${this.baseURL}/${origem}`\n        : `${this.baseURL}/${origem}/${id}`;\n\n    return this.http.get<RedeSocial[]>(URL).pipe(take(1));\n  }\n\n  /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @param redesSociais Precia adicionar Redes Sociais organizadas em RedeSocial[].\n   * @returns Observable<RedeSocial[]>\n   */\n  public saveRedesSociais(\n    origem: string,\n    id: number,\n    redesSociais: RedeSocial[]\n  ): Observable<RedeSocial[]> {\n    let URL =\n      id === 0\n        ? `${this.baseURL}/${origem}`\n        : `${this.baseURL}/${origem}/${id}`;\n\n    return this.http.put<RedeSocial[]>(URL, redesSociais).pipe(take(1));\n  }\n\n   /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @param redeSocialId Precia usar o id da Rede Social\n   * @returns Observable<any> - Pois é o retorno da Rota.\n   */\n    public deleteRedeSocial(\n      origem: string,\n      id: number,\n      redeSocialId: number\n    ): Observable<any> {\n      let URL =\n        id === 0\n          ? `${this.baseURL}/${origem}/${redeSocialId}`\n          : `${this.baseURL}/${origem}/${id}/${redeSocialId}`;\n\n      return this.http.delete(URL).pipe(take(1));\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '@app/models/Identity/User';\nimport { UserUpdate } from '@app/models/Identity/UserUpdate';\nimport { environment } from '@environments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private currentUserSource = new ReplaySubject<User>(1);\n  public currentUser$ = this.currentUserSource.asObservable();\n  baseUrl = environment.apiURL + 'api/user/'\n\n  constructor(private http: HttpClient) { }\n\n  public login(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'login', model).pipe(\n      take(1),\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n        }\n      })\n    );\n  }\n\n  getUser(): Observable<UserUpdate> {\n    return this.http.get<UserUpdate>(this.baseUrl + 'getuser').pipe(take(1));\n  }\n\n  updateUser(model: UserUpdate): Observable<void> {\n    return this.http.put<UserUpdate>(this.baseUrl + 'updateuser', model).pipe(take(1),\n      map((user: UserUpdate) => {\n          this.setCurrentUser(user);\n        }\n      )\n    )\n  }\n\n  public register(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'register', model).pipe(\n      take(1),\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n        }\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.currentUserSource.complete();\n  }\n\n  public setCurrentUser(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  postUpload(file: File): Observable<UserUpdate> {\n    const fileToUpload = file[0] as File;\n    const formData = new FormData();\n    formData.append('file', fileToUpload);\n\n    return this.http.post<UserUpdate>(`${this.baseUrl}upload-image`, formData).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '@app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  isCollapsed = true;\r\n\r\n  constructor(public userService: UserService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n    this.router.navigateByUrl('/user/login');\r\n  }\r\n\r\n  showMenu(): boolean {\r\n    return this.router.url != '/user/login';\r\n  }\r\n\r\n}\r\n\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\" *ngIf=\"showMenu()\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"home\">\r\n      <i class=\"fa fa-users mb-2 fa-lg\"></i>\r\n    </a>\r\n    <button class=\"navbar-toggler\" (click)=\"isCollapsed = !isCollapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <ng-container *ngIf=\"(userService.currentUser$ | async) !== null\">\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"eventos/lista\">Eventos</a>\r\n        </li>\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link\" routerLink=\"palestrantes\">Palestrantes</a>\r\n        </li>\r\n        <li class=\"nav-item\" routerLinkActive=\"active\">\r\n          <a class=\"nav-link\" routerLink=\"contatos\">Contatos</a>\r\n        </li>\r\n      </ng-container>\r\n      </ul>\r\n\r\n      <div *ngIf=\"(userService.currentUser$ | async) === null\" class=\"navbar-nav mr-3 d-xs-none d-none d-md-block\">\r\n        <a routerLink=\"/user/login\" class=\"btn btn-light mr-2 border\">Entrar</a>\r\n        <a routerLink=\"/user/registration\" class=\"btn btn-warning\">Cadastre-se</a>\r\n      </div>\r\n\r\n      <ul *ngIf=\"(userService.currentUser$ | async) !== null\" class=\"navbar-nav\">\r\n        <li class=\"nav-item dropdown\" dropdown *ngIf=\"(userService.currentUser$ | async) as user\">\r\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" style=\"cursor: pointer\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            {{user.userName | titlecase}}\r\n          </a>\r\n          <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n            <a class=\"dropdown-item\" routerLink=\"user/perfil\">\r\n              Perfil\r\n            </a>\r\n            <div role=\"separator\" class=\"divider\"></div>\r\n            <a (click)=\"logout()\" class=\"dropdown-item\" style=\"cursor: pointer;\">\r\n              Sair\r\n            </a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss']\n})\nexport class TituloComponent implements OnInit {\n  @Input() titulo: string = '';\n  @Input() iconClass?: string;\n  @Input() subtitulo?: string;\n  @Input() botaoListar: boolean = false;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {}\n\n  listar(): void {\n    this.router.navigate([`/${this.titulo.toLocaleLowerCase()}/lista`])\n  }\n\n}\n","<div class=\"d-flex p-3 my-3 text-white rounded shadow-sm\">\n  <div class=\"d-flex align-items-center mr-auto\">\n    <i class=\"{{iconClass}} mr-3\"></i>\n    <div class=\"lh-1\">\n      <h2 class=\"mb-0 lh-1\"> {{titulo}}</h2>\n      <small>{{subtitulo}}</small>\n    </div>\n  </div>\n  <div *ngIf=\"botaoListar\">\n    <button class=\"btn btn-outline-light\" (click)=\"listar()\">\n      Listar {{titulo}}\n    </button>\n  </div>\n</div>\n","export class Constants {\r\n  static readonly DATE_FMT = 'dd/MM/yyyy';\r\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm a`;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: 'https://localhost:5001/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}